{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "ok-blogger backend API",
    "description": "This is the documentation for backend server API."
  },
  "host": "ok-blogger.herokuapp.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "X-API-KEY",
      "description": "any description..."
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/users/session": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Start New User Session",
        "description": "Endpoint to login a user",
        "parameters": [
          {
            "name": "User Login Details",
            "in": "body",
            "description": "User Email and Password.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "hello2@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "87654321"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "LogOut",
        "description": "Endpoint to delete a user session",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users/new": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "SignUp",
        "description": "Endpoint to register a new user",
        "parameters": [
          {
            "name": "User Details",
            "in": "body",
            "description": "User Name Email and Password",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Keshanta Prajapat"
                },
                "email": {
                  "type": "string",
                  "example": "kesh@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "12345678"
                }
              },
              "required": [
                "name",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/users/my": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get LoggedIn User Details",
        "description": "Endpoint to return loggedIn user details using session token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User Details By Id",
        "description": "Endpoint to return specific user details using id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update Profile",
        "description": "Endpoint to update user details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User Id",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "6153433dde2e8001b35d123c"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          {
            "name": "User Details",
            "in": "body",
            "description": "User Details that need to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/blogs/": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Get All blogs",
        "description": "Endpoint to get all blogs based on query parameters",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "blog tag",
            "schema": {
              "type": "object",
              "properties": {
                "tag": {
                  "type": "string",
                  "example": "science-and-space"
                }
              },
              "required": [
                "tag"
              ]
            }
          },
          {
            "name": "max count",
            "in": "query",
            "description": "Maximum number of elements that need to be returned",
            "schema": {
              "type": "object",
              "properties": {
                "maxcount": {
                  "type": "number",
                  "example": 3
                }
              },
              "required": [
                "maxcount"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort or Not sorted",
            "schema": {
              "type": "object",
              "properties": {
                "sort": {
                  "type": "boolean",
                  "example": true
                }
              },
              "required": [
                "sort"
              ]
            }
          },
          {
            "name": "maxcount",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/blogs/{id}": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Get Blog By Id",
        "description": "Endpoint get a blog by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Blog"
        ],
        "summary": "Update Blog by Id",
        "description": "Endpoint to update a specific blog using id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Values",
            "in": "body",
            "description": "Updated Values",
            "schema": {
              "$ref": "#/definitions/Blog"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/blogs/image/new/{imgName}": {
      "get": {
        "tags": [
          "Other"
        ],
        "summary": "Get direct upload link for S3",
        "description": "Endpoint to get a link from S3 which allows direct upload of image to specified location",
        "parameters": [
          {
            "name": "imgName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "300": {
            "description": "Multiple Choices"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/blogs/new": {
      "post": {
        "tags": [
          "Blog"
        ],
        "summary": "Create new blog",
        "description": "Endpoint to create a new blog",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "description": "Details for the blog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Blog"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/comments/{commentBoxId}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Get Comment Box By Id",
        "description": "Endpoint to return all comments in a comment box using Id",
        "parameters": [
          {
            "name": "commentBoxId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/comments/{commentBoxId}/new": {
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Add Comment",
        "description": "Endpoint to create new comment",
        "parameters": [
          {
            "name": "commentBoxId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Comment",
            "in": "body",
            "description": "Comment Message",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Something about blog"
                }
              },
              "required": [
                "message"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "406": {
            "description": "Not Acceptable"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/comments/{commentBoxId}/{commentId}": {
      "put": {
        "tags": [
          "Comments"
        ],
        "summary": "Update Comment By Id",
        "description": "Endpoint to update specific comment in a comment box",
        "parameters": [
          {
            "name": "commentBoxId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Message",
            "in": "body",
            "description": "Comment Message which need to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Updated message"
                }
              },
              "required": [
                "message"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Rajendra Prajapat"
        },
        "email": {
          "type": "string",
          "example": "hello@gmail.com"
        },
        "description": {
          "type": "string",
          "example": "Software Developer"
        },
        "github": {
          "type": "string",
          "example": "https://www.github.com/rajpra786"
        },
        "twitter": {
          "type": "string",
          "example": "https://twitter.com/msdhoni"
        },
        "website": {
          "type": "string",
          "example": "https://www.rajendra.codes/"
        },
        "avatar": {
          "type": "string",
          "example": "https://en.wikipedia.org/wiki/File:A._P._J._Abdul_Kalam.jpg"
        },
        "blogs": {
          "type": "array",
          "example": [],
          "items": {}
        }
      }
    },
    "Blog": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string",
          "example": "Author Id"
        },
        "title": {
          "type": "string",
          "example": "Blog Title"
        },
        "content": {
          "type": "string",
          "example": "<p>Blog Content In HTML</p>"
        },
        "description": {
          "type": "string",
          "example": "Few lines about blog"
        },
        "image": {
          "type": "string",
          "example": "Poster URL"
        },
        "readTime": {
          "type": "number",
          "example": 2
        },
        "comments_enabled": {
          "type": "boolean",
          "example": true
        },
        "comments": {
          "type": "string",
          "example": "Comment Box Id"
        },
        "tags": {
          "type": "array",
          "example": [],
          "items": {}
        }
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string",
          "example": "Author Id"
        },
        "message": {
          "type": "string",
          "example": "Some comment"
        }
      }
    },
    "Comments": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        }
      }
    }
  }
}